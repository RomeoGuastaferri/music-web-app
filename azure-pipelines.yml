# Maven package Java project Web App to Linux on Azure
# Build your Java project and deploy it to Azure as a Linux web app
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master
- develop

variables:

  # Azure Resource Manager connection created during pipeline creation
  azureSubscription: 'bf75e94e-9c81-482f-b708-863910cfab89'
  
  # Agent VM image name
  vmImageName: 'ubuntu-16.04'

  # Web app name
  webAppName: 'music-albums'

  # Environment name
  environmentName: 'dev'
  
  # Docker image
  containerRegistry: 'rguastaferri-service-connection'
  imageRepository: 'music-albums'
  tag: '0.0.1-SNAPSHOT'
  
stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: MavenPackageAndPublishArtifacts
    displayName: Maven Package and Publish Artifacts
    pool:
      vmImage: $(vmImageName)
    
    steps:
    - task: Maven@3
      displayName: 'Maven Package'
      inputs:
        mavenPomFile: 'pom.xml'

#    - task: CopyFiles@2
#      displayName: 'Copy Files to artifact staging directory'
#      inputs:
#        SourceFolder: '$(System.DefaultWorkingDirectory)'
#        Contents: '**/target/*.?(war|jar)'
#        TargetFolder: $(Build.ArtifactStagingDirectory)

#    - task: Docker@2
#      displayName: Login to ACR
#      inputs:
#        command: login
#        containerRegistry: $(containerRegistry)        

    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        containerRegistry: $(containerRegistry)
        tags: |
          $(tag)

#    - upload: $(Build.ArtifactStagingDirectory)
#      artifact: drop
#
#- stage: Deploy
#  displayName: Deploy stage
#  dependsOn: Build
#  condition: succeeded()
#  jobs:
#  - deployment: DeployLinuxWebApp
#    displayName: Deploy Linux Web App
#    environment: $(environmentName)
#    pool: 
#      vmImage: $(vmImageName)
#    strategy:
#      runOnce:
#        deploy:
#          steps:
#          - task: AzureWebApp@1
#            displayName: 'Azure Web App Deploy: rg-music'
#            inputs:
#              azureSubscription: $(azureSubscription)
#              appType: webAppLinux
#              appName: $(webAppName)
#              package: '$(Pipeline.Workspace)/drop/**/target/*.?(war|jar)'
