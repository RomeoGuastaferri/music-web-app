<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>ca.guastaferri</groupId>
	<artifactId>music-albums</artifactId>
	<version>1.1.1</version>
	<packaging>jar</packaging>

	<description>Demo project for Spring PCF</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.0.1.RELEASE</version>
		<relativePath/>
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<skip.unit.tests>false</skip.unit.tests>
		<skip.integration.tests>true</skip.integration.tests>
	</properties>

	<dependencies>
	
		<dependency>
		    <groupId>org.springframework.boot</groupId>
		    <artifactId>spring-boot</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>com.microsoft.sqlserver</groupId>
			<artifactId>mssql-jdbc</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
		</dependency>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
		    <groupId>org.springframework.cloud</groupId>
		    <artifactId>spring-cloud-cloudfoundry-connector</artifactId>
		</dependency>
		<dependency>
		    <groupId>org.webjars</groupId>
		    <artifactId>bootstrap</artifactId>
		    <version>3.1.1</version>
		</dependency>
		<dependency>
		    <groupId>org.webjars</groupId>
		    <artifactId>angularjs</artifactId>
		    <version>1.2.16</version>
		</dependency>
		<dependency>
		    <groupId>org.webjars</groupId>
		    <artifactId>angular-ui</artifactId>
		    <version>0.4.0-2</version>
		    <scope>runtime</scope>
		</dependency>
		<dependency>
		    <groupId>org.webjars</groupId>
		    <artifactId>angular-ui-bootstrap</artifactId>
		    <version>0.10.0-1</version>
		</dependency>
		<dependency>
		    <groupId>org.webjars</groupId>
		    <artifactId>jquery</artifactId>
		    <version>2.1.0-2</version>
		</dependency>
		<dependency>
		    <groupId>commons-dbcp</groupId>
		    <artifactId>commons-dbcp</artifactId>
		    <version>1.4</version>
		</dependency>

		<dependency>
		    <groupId>javax.xml.bind</groupId>
		    <artifactId>jaxb-api</artifactId>
		</dependency>

		<dependency>
		    <groupId>org.springframework.cloud</groupId>
		    <artifactId>spring-cloud-spring-service-connector</artifactId>
		</dependency>

		<dependency>
		    <groupId>com.microsoft.azure</groupId>
		    <artifactId>azure-keyvault-secrets-spring-boot-starter</artifactId>
		    <version>2.0.14</version>
		</dependency>

		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-java</artifactId>
		</dependency>
	</dependencies>

	<build>
		<plugins>
		
			<!-- Package as an executable jar -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>

			<!-- Unit testing -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<skipTests>${skip.unit.tests}</skipTests>
					<systemPropertyVariables>
						<!-- Disable azure key vault for tests -->
						<azure.keyvault.enabled>false</azure.keyvault.enabled>
					</systemPropertyVariables>
				</configuration>
			</plugin>

			<!-- JaCoCo code coverage -->
			<plugin>
			    <groupId>org.jacoco</groupId>
			    <artifactId>jacoco-maven-plugin</artifactId>
			    <version>0.8.4</version>
			    <executions>
			        <execution>
			            <id>coverage-initialize</id>
			            <goals>
			                <goal>prepare-agent</goal>
			            </goals>
			        </execution>
			        <execution>
			            <id>coverage-report</id>
			            <phase>prepare-package</phase>
			            <goals>
			                <goal>report</goal>
			            </goals>
			        </execution>
			    </executions>
			</plugin>
			
			<!-- Integration tests -->

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>add-integration-test-sources</id>
						<phase>generate-test-sources</phase>
						<goals>
							<goal>add-test-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>src/integration-test/java</source>
							</sources>
						</configuration>
					</execution>
					<execution>
						<id>add-integration-test-resources</id>
						<phase>generate-test-resources</phase>
						<goals>
							<goal>add-test-resource</goal>
						</goals>
						<configuration>
							<resources>
								<resource>
									<directory>src/integration-test/resources</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<executions>
					<execution>
						<id>integration-tests</id>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
						<configuration>
							<skipTests>${skip.integration.tests}</skipTests>
							<includes>
								<include>src/integration-test/java/**/*</include>
							</includes>
						</configuration>
					</execution>
				</executions>
			</plugin>
			
			<!-- Containerize using docker -->
			<plugin>
			    <groupId>org.codehaus.mojo</groupId>
			    <artifactId>exec-maven-plugin</artifactId>
			    <executions>
			        <execution>
			            <id>docker-package</id>
			            <phase>package</phase>
			            <goals>
			                <goal>exec</goal>
			            </goals>
			            <configuration>
			                <skip>true</skip>
			                <executable>docker</executable>
			                <workingDirectory>${project.basedir}</workingDirectory>
			                <arguments>
			                    <argument>build</argument>
			                    <argument>-t</argument>
			                    <argument>${project.artifactId}:${project.version}</argument>
						<argument>--rm</argument>
						<argument>.</argument>
			                </arguments>
			            </configuration>
			        </execution>
			    </executions>
			</plugin>

		</plugins>
	</build>

	<profiles>
		<profile>
			<!-- Use in-memory database for local development and testing. -->  
			<id>dev</id>  
			<properties>
    				<spring.profiles.active>dev</spring.profiles.active>
			</properties>
		</profile>
		
		<profile>
			<!-- Use Azure-hosted database server -->  
			<id>prod</id>  
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>  
			<properties>  
    				<spring.profiles.active>prod</spring.profiles.active>
			</properties>
		</profile>
		
		<!-- Integration tests -->
		<profile>
			<id>integration-tests</id>  
			<properties>
		            <skip.unit.tests>true</skip.unit.tests>
		            <skip.integration.tests>false</skip.integration.tests>
			</properties>
		</profile>
	</profiles>

</project>
